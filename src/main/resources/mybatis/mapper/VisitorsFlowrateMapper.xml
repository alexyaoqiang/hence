<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wiscom.hence.dao.VisitorsFlowrateMapper" >
  <resultMap id="BaseResultMap" type="com.wiscom.hence.model.VisitorsFlowrate" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="hour" property="hour" jdbcType="INTEGER" />
    <result column="externalPerson" property="externalperson" jdbcType="INTEGER" />
    <result column="foreignPerson" property="foreignperson" jdbcType="INTEGER" />
    <result column="residentPerson" property="residentperson" jdbcType="INTEGER" />
    <result column="xinjiangPerson" property="xinjiangperson" jdbcType="INTEGER" />
    <result column="xizangPerson" property="xizangperson" jdbcType="INTEGER" />
    <result column="realTotal" property="realtotal" jdbcType="INTEGER" />
    <result column="timeFrame" property="timeframe" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from visitors_flowrate
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wiscom.hence.model.VisitorsFlowrate" >
    insert into visitors_flowrate (ID, hour, externalPerson, 
      foreignPerson, residentPerson, xinjiangPerson, 
      xizangPerson, realTotal, timeFrame, 
      createTime, updateTime)
    values (#{id,jdbcType=BIGINT}, #{hour,jdbcType=INTEGER}, #{externalperson,jdbcType=INTEGER}, 
      #{foreignperson,jdbcType=INTEGER}, #{residentperson,jdbcType=INTEGER}, #{xinjiangperson,jdbcType=INTEGER}, 
      #{xizangperson,jdbcType=INTEGER}, #{realtotal,jdbcType=INTEGER}, #{timeframe,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wiscom.hence.model.VisitorsFlowrate" >
    update visitors_flowrate
    set hour = #{hour,jdbcType=INTEGER},
      externalPerson = #{externalperson,jdbcType=INTEGER},
      foreignPerson = #{foreignperson,jdbcType=INTEGER},
      residentPerson = #{residentperson,jdbcType=INTEGER},
      xinjiangPerson = #{xinjiangperson,jdbcType=INTEGER},
      xizangPerson = #{xizangperson,jdbcType=INTEGER},
      realTotal = #{realtotal,jdbcType=INTEGER},
      timeFrame = #{timeframe,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select ID, hour, externalPerson, foreignPerson, residentPerson, xinjiangPerson, xizangPerson, 
    realTotal, timeFrame, createTime, updateTime
    from visitors_flowrate
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select ID, hour, externalPerson, foreignPerson, residentPerson, xinjiangPerson, xizangPerson, 
    realTotal, timeFrame, createTime, updateTime
    from visitors_flowrate
  </select>
</mapper>